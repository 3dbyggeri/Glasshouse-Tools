<DnaLibrary Name="GlasshouseExcel Add-In" RuntimeVersion="v4.0">
  <ExternalLibrary Path="GlasshouseExcel.dll" ExplicitExports="false" LoadFromBytes="true" Pack="true" />
  <Reference Path="NetOffice.dll"  Pack="true" />
  <Reference Path="Newtonsoft.Json.dll" Pack="true" />
  <Reference Path="RestSharp.dll"  Pack="true" />
  <Reference Path="OfficeApi.dll"  Pack="true" />
  <Reference Path="ExcelApi.dll"  Pack="true" />
  <Reference Path="stdole.dll"  Pack="true" />
  <Reference Path="VBIDEApi.dll"  Pack="true" />
  <!-- 
       The RuntimeVersion attribute above allows two settings:
       * RuntimeVersion="v2.0" - for .NET 2.0, 3.0 and 3.5
       * RuntimeVersion="v4.0" - for .NET 4 and 4.5

       Additional referenced assemblies can be specified by adding 'Reference' tags. 
       These libraries will not be examined and registered with Excel as add-in libraries, 
       but will be packed into the -packed.xll file and loaded at runtime as needed.
       For example:
       
       <Reference Path="Another.Library.dll" Pack="true" />
  
       Excel-DNA also allows the xml for ribbon UI extensions to be specified in the .dna file.
       See the main Excel-DNA site at http://excel-dna.net for downloads of the full distribution.
  -->

  <CustomUI>
    <customUI xmlns='http://schemas.microsoft.com/office/2009/07/customui' onLoad='OnLoad'>
      <ribbon>
        <tabs>
          <tab id='tabglasshouse' label='GLASSHOUSE' visible='true'>
            <group id='ghproject' label='Project' visible='true'>
              <button id='btnGetProjects' label='Get Projects' screentip='Will dump your projects at the active cell'  size='large' imageMso='MicrosoftPublisher' onAction='btnGetProjects' visible='true'/>
              <button id='btnGetProjectInfo' label='Get Project Info' screentip='Will dump project info for the currently selected project in the Project dropdown' size='large' imageMso='GroupPivotTableActiveField' onAction='btnGetProjectInfo' visible='true'/>
              <dropDown id='cbProjects'
                        screentip='List of projects'
                          label='Project'
                          getItemCount='cbProjects_GetItemCount'
                          getItemID='cbProjects_GetItemID'
                          getItemLabel='cbProjects_GetItemLabel'
                          getSelectedItemID='cbProjects_GetSelectedItemID'
                          onAction='cbProjects_onAction' />
              <button id='btnRefreshProjectList' label='Refresh Project List' screentip='Refresh Project List' onAction='btnRefreshProjectList' visible='true'/>
            </group >
            <group id='ghview' label='View' visible='true'>
              <button id='btnGetViews' label='Get Views' screentip='Will dump the views for the currently selected project in the Project dropdown' size='large' imageMso='AccessListCustom' onAction='btnGetViews' visible='true'/>
              <button id='btnGetViewColumns' label='Get View Columns' screentip='Will dump the columnnames for the currently selected view in the View dropdown' size='large' imageMso='RightArrow2' onAction='btnGetViewColumns' visible='true'/>
              <dropDown id='cbViews'
                        screentip='List of views'
                          label='Views'
                          getItemCount='cbViews_GetItemCount'
                          getItemID='cbViews_GetItemID'
                          getItemLabel='cbViews_GetItemLabel'
                          getSelectedItemID='cbViews_GetSelectedItemID'
                          onAction='cbViews_onAction' />
              <button id='btnRefreshViewList' label='Refresh View List' screentip='Refresh View List' onAction='btnRefreshViewList' visible='true'/>
            </group >
            <group id='ghentris' label='Entries' visible='true'>
              <button id='btnGetViewEntries' label='Get View Entries' screentip='Will dump the all entries for the currently selected view in the View dropdown' size='large' imageMso='GroupCreateTables' onAction='btnGetViewEntries' visible='true'/>
            </group >
            <group id='ghsync' label='Sync' visible='true'>
              <button id='btnRead' label='Read' screentip='Get data from Glasshouse'
                      supertip='Read will look for the "GlassHouseJournalGUID" in the first 10x10 cells of the sheet and insert entries/update columns info. The data will be inserted either 2 rows down from "GlassHouseJournalGUID" or at the last used row – whatever comes last. Rows will be updated in the is a match between the "GlassHouseJournalGUID" in excel and Glasshouse – otherwise the missing entry from Glasshouse will be added to the end.'
                      size='large' imageMso='ExportExcel' onAction='btnRead' visible='true'/>
              <separator  id="Separator1" />
              <button id='btnWrite' label='Update' screentip='Write data to Glasshouse'
                      supertip='Update will look for the "GlassHouseJournalGUID" in the first 10x10 cells of the sheet read data from 2 row below that cell. Glasshouse will be updated if there is a guid in "GlassHouseJournalGUID" and there is written “update” below the a Glasshouse parameter. "GlassHouseJournalGUID" cannot be updated from excel.'
                      size='large' imageMso='ImportExcel' onAction='btnWrite' visible='true'/>
              <button id='btnWriteCSV' label='Write CSV' screentip='Write data to CSV file'
                      supertip='Works like Update, except it will only write a CSV file'
                      size='large' imageMso='ExportTextFile' onAction='btnWriteCSV' visible='true'/>
              <separator  id="Separator2" />
              <button id='btnValidator' label='Validator' screentip='Insert Validator dropdown at active cell'
                      supertip='Insert Validator list - nothing or update'
                      size='large' imageMso='DataValidation' onAction='btnValidator' visible='true'/>
            </group >
            <group id='ghsettings' label='User' visible='true'>
              <button id='btnLogin' label='Login' screentip='Login into Glasshouse with you username and password' size='large' imageMso='AdpPrimaryKey' onAction='btnLogin' visible='true'/>
              <button id='btnLogout' label='Logout' screentip='Logout of glasshouse and discard key'  size='large' imageMso='WindowClose' onAction='btnLogout' visible='true'/>
            </group >
            <group id='ghabout' label='About' visible='true'>
              <button id='btnAbout' label='About' screentip='About Glasshouse Excel Tool' size='large' imageMso='Help' onAction='btnAbout' visible='true'/>
            </group >
          </tab>
        </tabs>
      </ribbon>
    </customUI>
  </CustomUI>

</DnaLibrary>

